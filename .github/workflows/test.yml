# .github/workflows/test.yml

name: Gnomon Integration & Performance CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always

jobs:
  # This single job compiles the Rust binary and then uses a Python script
  # to orchestrate an end-to-end test against PLINK for both correctness
  # and performance.
  test-and-benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust nightly toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # The sccache action helps to speed up Rust compilations by caching
      # compiled artifacts. It is more robust than manual cache steps.
      - name: Setup sccache for Rust build caching
        uses: mozilla-actions/sccache-action@v0.0.5

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy requests psutil

      - name: Compile Gnomon in release mode
        env:
          # Wire the Rust build process to use sccache.
          RUSTC_WRAPPER: sccache
        run: cargo build --release

      - name: Run Unified Test & Benchmark Script
        run: python testing/test.py
