name: Rust Test CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly

      - name: Cache Cargo home
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-home-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-home-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo-home

      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('src/**/*.rs') }}-${{ hashFiles('tests/**/*.rs') }}
          restore-keys: |
            ${{ runner.os }}-target-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-target-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-target

      - name: Cache Rust toolchain components
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: ${{ runner.os }}-rust-toolchain-nightly-${{ hashFiles('rust-toolchain.toml') }}
          restore-keys: |
            ${{ runner.os }}-rust-toolchain-nightly

      - name: Cache apt packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/*.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt

      - name: Cache getdoc installation
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/getdoc
          key: ${{ runner.os }}-getdoc-binary-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-getdoc-binary

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            target/debug/deps
            target/debug/build
          key: ${{ runner.os }}-deps-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps
  
      - name: Install getdoc
        run: |
          if [ ! -f ~/.cargo/bin/getdoc ]; then
            echo "Installing getdoc..."
            cargo +nightly install getdoc --locked
          else
            echo "getdoc already installed (cached)"
          fi

      - name: Cache test artifacts
        uses: actions/cache@v4
        with:
          path: |
            target/debug/incremental
            target/.rustc_info.json
          key: ${{ runner.os }}-test-artifacts-${{ hashFiles('src/**/*.rs') }}-${{ hashFiles('tests/**/*.rs') }}
          restore-keys: |
            ${{ runner.os }}-test-artifacts

      - name: Run Rust unit tests
        id: test_step
        run: cargo +nightly test
        continue-on-error: true
        env:
          RUST_BACKTRACE: 1

      - name: Generate custom report with getdoc
        run: |
          ~/.cargo/bin/getdoc
          echo "=== Custom Report (getdoc) ==="
          cat report.md

      - name: Fail job if unit tests failed
        if: steps.test_step.outcome == 'failure'
        run: exit 1

      - name: Build Gnomon release binary
        run: cargo build --release

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install pandas numpy requests psutil

      - name: Run Tests
        run: python test/test.py
