name: Profiling Fit Run

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  profiling-fit:
    name: Build, Profile & Report
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust nightly toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Ensure perf tooling is available
        run: |
          if ! command -v perf >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y linux-tools-common linux-tools-generic || true
            if ! command -v perf >/dev/null 2>&1; then
              KERNEL="$(uname -r)"
              sudo apt-get install -y "linux-tools-$KERNEL" || true
            fi
          fi
          perf --version

      - name: Allow perf events recording
        run: |
          sudo sysctl -w kernel.perf_event_paranoid=0

      - name: Build profiling binary
        run: |
          cargo +nightly build --profile profiling --features no-inline-profiling

      - name: Profile gnomon fit workload
        env:
          PERF_DATA: perf.data
        run: |
          set -euxo pipefail
          perf record --call-graph dwarf -e task-clock:u -g -o "$PERF_DATA" -- target/profiling/gnomon --fit "gs://gcp-public-data--gnomad/resources/hgdp_1kg/phased_haplotypes_v2/hgdp1kgp_chr20.filtered.SNV_INDEL.phased.shapeit5.bcf" --components 16 --list "https://github.com/SauersML/genomic_pca/raw/refs/heads/main/data/GSAv2_hg38.tsv"
      - name: Render perf reports
        env:
          PERF_DATA: perf.data
        run: |
          set -euo pipefail
          if [ ! -f "$PERF_DATA" ]; then
            echo "::error::perf.data not found"
            exit 1
          fi

          echo "==================== PERF REPORT (flat) ===================="
          perf report --stdio --no-children --sort=symbol --percent-limit=0.5 -i "$PERF_DATA"
          echo "===========================================================\n"

          echo "==================== PERF REPORT (call graph) =============="
          perf report --stdio --call-graph=graph --percent-limit=2 -i "$PERF_DATA"
          echo "==========================================================="
